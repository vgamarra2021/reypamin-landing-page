---
import PrimaryButton from "@/common/PrimaryButton.astro";
import { heroItems } from "@/data/hero-items";
import heroVideo from "@videos/hero-video-short.webm";
---

<div class="flex flex-col h-[100vh] max-h-[400px] sm:max-h-[800px] lg:max-h-[none] w-full relative">
  <video
    id="hero-video"
    class="absolute inset-0 w-full h-full object-cover"
    autoplay
    muted
    loop
    playsinline
  >
    <source src={heroVideo} type="video/webm" />
    Tu navegador no soporta la etiqueta de video.
  </video>
  {
    heroItems.map((item, index) => (
      <div
        id={"hero-container-" + (index + 1)}
        class="absolute pt-[110px] h-full inset-0 items-center justify-center z-30 hidden"
      >
        <div class="container px-5 sm:px-0 mx-auto flex flex-col justify-start gap-2 md:gap-6 text-white">
          <h1
            id={"hero-title-" + (index + 1)}
            class="text-white  font-extrabold w-full max-w-2xl leading-tight hero-animation hero-title drop-shadow-md text-3xl md:text-6xl"
          >
            {item.title}
          </h1>
          <h2
            id={"hero-subtitle-" + (index + 1)}
            class="text-xl md:text-2xl w-full max-w-3xl text-pretty italic hero-animation hero-subtitle drop-shadow-md"
          >
            {item.subtitle}
          </h2>

          <a id={"hero-btn-" + (index + 1)} class="flex drop-shadow-md mt-2 md:mt-0" href={item.href}>
            <PrimaryButton title={item.btnText} />
          </a>
        </div>
      </div>
    ))
  }
</div>

<script>
  import anime from "animejs/lib/anime.es.js";
  import { heroItems } from "@/data/hero-items";
import { formatTitles } from "@/functions/animation";

  const $video: any = document.getElementById("hero-video");
  const $heroTitles: any = document.querySelectorAll(".hero-title");
  const $heroSubtitles: any = document.querySelectorAll(".hero-subtitle");
  
  formatTitles($heroTitles);
  formatTitles($heroSubtitles);

  const timeline = anime.timeline({
    autoplay: false,
    easing: "easeInOutQuad",
    duration: 16000,
  });

  const addAnimations = () => {
    heroItems.forEach((item, index) => {
      timeline
        .add(
          {
            targets: [
              "#hero-title-" + (index + 1) + " span",
              "#hero-btn-" + (index + 1),
            ],
            opacity: [0, 1],
            duration: 800,
            easing: "easeInOutSine",
            delay: (elem, index) => index * 10,
            begin: () => {
              console.log("begin " + "#hero-container-" + (index + 1));
              document
                .querySelector("#hero-container-" + (index + 1))!
                .classList.replace("hidden", "flex");
            },
          },
          item.time
        )
        .add(
          {
            targets: [
              "#hero-subtitle-" + (index + 1) + " span",
              "#hero-btn-" + (index + 1),
            ],
            opacity: [0, 1],
            duration: 800,
            easing: "easeInOutSine",
            delay: (elem, index) => index * 10,
            begin: () => {
              console.log("begin " + "#hero-container-" + (index + 1));
              document
                .querySelector("#hero-container-" + (index + 1))!
                .classList.replace("hidden", "flex");
            },
          },
          item.time
        )
        .add(
          {
            targets: [
              "#hero-title-" + (index + 1) + " span",
              "#hero-subtitle-" + (index + 1) + " span",
              "#hero-btn-" + (index + 1),
            ],
            opacity: [1, 0],
            duration: 600,
            easing: "easeInOutSine",
            complete: () => {
              console.log("complete");
              document
                .querySelector("#hero-container-" + (index + 1))!
                .classList.replace("flex", "hidden");
            },
          },
          "+=3000"
        );
    });
  };

  addAnimations();

  const addPreloaderEvent = () => {
    const $loader: any = document.getElementById("loader");
    console.log("El video ha cargado completamente.");
    $loader.classList.add("animate__fadeOut");
    $loader.addEventListener(
      "animationend",
      (event: { animationName: string }) => {
        if (event.animationName === "fadeOut") {
          $loader.classList.replace("flex", "hidden");
        }
      },
      { once: true }
    );
  };

  $video.addEventListener("playing", () => {
    addPreloaderEvent();
    console.log("El video ha comenzado a reproducirse.");
    timeline.play();
  });

  $video.addEventListener("ended", () => {
    console.log("El video ha terminado y volverÃ¡ a iniciar.");
    $video.play();
  });

  $video.addEventListener(
    "canplaythrough",
    () => {
      addPreloaderEvent();
    },
    { once: true }
  );
</script>
